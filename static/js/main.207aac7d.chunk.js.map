{"version":3,"sources":["constants/sortBy.js","components/ProductItem/ProductItem.jsx","components/ProductList/ProductList.jsx","components/Buttons/Buttons.jsx","App.jsx","index.jsx"],"names":["SORT_BY","ProductItem","item","ProductList","goods","map","Buttons","sortField","sortedBy","className","type","onClick","cn","goodsFromServer","sortedGoods","App","useState","setSortedBy","isReversed","setIsReversed","set","preperedGoods","reverse","sort","good1","good2","localeCompare","length","getPreperedData","field","getSortField","ReactDOM","render","document","getElementById"],"mappings":"qMAAaA,G,YACD,YADCA,EAEH,SAFGA,EAGF,U,OCHEC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACzB,6BAAKA,KCCMC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACzB,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAaA,KAAMA,GAAWA,S,gBCDvBI,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,SAAd,OACrB,sBAAKC,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPF,IAAcP,GAAoB,YAEpCW,QAAS,kBAAMH,EAASR,IAL1B,iCAUA,wBACEU,KAAK,SACLD,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYL,IAAcP,IAE5BW,QAAS,kBAAMH,EAASR,IAL1B,4BAUA,wBACEU,KAAK,SACLD,UAAWG,IAAG,SAAU,aAAc,CACpC,WACEL,IAAcP,IAElBW,QAAS,kBAAMH,EAASR,IAN1B,qBAWe,KAAdO,GACC,wBACEG,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAMH,EAAS,KAH1B,uBC9BOK,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGEC,EAAW,UAAOD,GAiCTE,EAAM,WACjB,MAAiCC,mBAAS,IAA1C,mBAAOT,EAAP,KAAkBU,EAAlB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAEMf,EAnCgB,SAACA,EAAOI,EAAUY,GACxC,IAAMC,EAAa,UAAOR,GAE1B,OAAIL,IAAaR,EACRc,EAAYQ,WAGjBd,IACFM,EAAcO,EAAcE,MAAK,SAACC,EAAOC,GACvC,OAAQjB,GACN,KAAKR,EACH,OAAOwB,EAAME,cAAcD,GAE7B,KAAKzB,EACH,OAAOwB,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,OAKVnB,EAMEa,EALLP,EAAW,UAAOD,IAYNe,CAAgBf,EAAiBN,GAU/C,OACE,sBAAKE,UAAU,kBAAf,UACE,cAAC,EAAD,CACEF,UAAWA,EACXC,SAAU,SAAAqB,GAAK,OAZA,SAACA,GACpBZ,EAAYY,GAERA,IAAU7B,GACZmB,GAAeD,GAQMY,CAAaD,MAGlC,cAAC,EAAD,CAAazB,MAAOA,QCxE1B2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.207aac7d.chunk.js","sourcesContent":["export const SORT_BY = {\n  ALPHABET: 'alphabet',\n  LENGTH: 'length',\n  REVERSE: 'reverse',\n};\n","export const ProductItem = ({ item }) => (\n  <li>{item}</li>\n);\n","import { ProductItem } from '../ProductItem';\n\nexport const ProductList = ({ goods }) => (\n  <ul>\n    {goods.map(item => (\n      <ProductItem item={item} key={item} />\n    ))}\n  </ul>\n);\n","import cn from 'classnames';\n\nimport { SORT_BY } from '../../constants/sortBy';\n\nexport const Buttons = ({ sortField, sortedBy }) => (\n  <div className=\"buttons\">\n    <button\n      type=\"button\"\n      className={`button is-info ${\n        sortField !== SORT_BY.ALPHABET && 'is-light'\n      }`}\n      onClick={() => sortedBy(SORT_BY.ALPHABET)}\n    >\n      Sort alphabetically\n    </button>\n\n    <button\n      type=\"button\"\n      className={cn('button', 'is-success', {\n        'is-light': sortField !== SORT_BY.LENGTH,\n      })}\n      onClick={() => sortedBy(SORT_BY.LENGTH)}\n    >\n      Sort by length\n    </button>\n\n    <button\n      type=\"button\"\n      className={cn('button', 'is-warning', {\n        'is-light':\n          sortField !== SORT_BY.REVERSE,\n      })}\n      onClick={() => sortedBy(SORT_BY.REVERSE)}\n    >\n      Reverse\n    </button>\n\n    {sortField !== '' && (\n      <button\n        type=\"button\"\n        className=\"button is-danger is-light\"\n        onClick={() => sortedBy('')}\n      >\n        Reset\n      </button>\n    )}\n  </div>\n);\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\n\nimport './App.scss';\nimport { SORT_BY } from './constants/sortBy';\nimport { ProductList } from './components/ProductList';\nimport { Buttons } from './components/Buttons';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nlet sortedGoods = [...goodsFromServer];\n\nconst getPreperedData = (goods, sortedBy, set) => {\n  const preperedGoods = [...goodsFromServer];\n\n  if (sortedBy === SORT_BY.REVERSE) {\n    return sortedGoods.reverse();\n  }\n\n  if (sortedBy) {\n    sortedGoods = preperedGoods.sort((good1, good2) => {\n      switch (sortedBy) {\n        case SORT_BY.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_BY.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (!sortedBy) {\n    sortedGoods = [...goodsFromServer];\n\n    return sortedGoods;\n  }\n\n  return preperedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortedBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = getPreperedData(goodsFromServer, sortField);\n\n  const getSortField = (field) => {\n    setSortedBy(field);\n\n    if (field === SORT_BY.REVERSE) {\n      setIsReversed(!isReversed);\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <Buttons\n        sortField={sortField}\n        sortedBy={field => getSortField(field)}\n      />\n\n      <ProductList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}